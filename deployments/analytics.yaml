apiVersion: v1
kind: Service
metadata:
  labels:
    micro: service
    name: analytics
  name: analytics
spec:
  ports:
    - name: service-port
      port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    micro: service
    name: analytics
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    name: analytics
    source: github.com/trmnl-core/services/analytics
    version: analytics
  labels:
    micro: service
    name: analytics
    version: analytics
spec:
  replicas: 1
  selector:
    matchLabels:
      micro: service
      name: analytics
      version: analytics
  template:
    metadata:
      annotations:
        name: analytics
        source: github.com/trmnl-core/services/analytics
        version: analytics
      labels:
        micro: service
        name: analytics
        version: analytics
    spec:
      containers:
        - env:
            - name: MICRO_SERVICE_NAME
              value: analytics
            - name: MICRO_SERVICE_VERSION
              value: analytics
            - name: MICRO_PROXY
              value: micro-network.default.svc.cluster.local:8443
            - name: MICRO_SERVICE_ADDRESS
              value: :8080
            - name: MICRO_NAMESPACE
              value: micro
            - name: MICRO_AUTH_ID
              valueFrom:
                secretKeyRef:
                  key: MICRO_AUTH_ID
                  name: analytics-analytics
                  optional: false
            - name: MICRO_AUTH_SECRET
              valueFrom:
                secretKeyRef:
                  key: MICRO_AUTH_SECRET
                  name: analytics-analytics
                  optional: false
            - name: MICRO_STORE_ADDRESS
              value: "postgresql://root@cockroachdb-cluster-public:26257/analytics?ssl=true&sslmode=require&sslrootcert=certs/store/ca.crt&sslkey=certs/store/key.pem&sslcert=certs/store/cert.pem"
          image: ghcr.io/trmnl-core/cells:v3
          imagePullPolicy: IfNotPresent
          name: analytics
          ports:
            - containerPort: 8080
              name: service-port
              protocol: TCP
          volumeMounts:
            - name: cockroachdb-client-certs
              mountPath: "/certs/store"
              readOnly: true
      volumes:
        - name: cockroachdb-client-certs
          secret:
            secretName: cockroachdb-client-certs
            defaultMode: 0600
